#!/bin/bash

# Check if is valid IP
function validate_ip {
  local ip_address="$1"
  local ip_regex='^(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])$'
  if [[ $ip_address =~ $ip_regex ]]; then
    return 0
  else
    return 1
  fi
}

function validate_network_address {
  local network_address="$1"
  local network_regex='^(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])/[0-9]{2}$'
  if ! [[ $network_address =~ $network_regex ]]; then
    return 1
  fi
  local octet1=$(echo "$network_address" | cut -d'.' -f1)
  local octet2=$(echo "$network_address" | cut -d'.' -f2)
  local octet3=$(echo "$network_address" | cut -d'.' -f3)
  local octet4=$(echo "$network_address" | cut -d'.' -f4 | cut -d'/' -f1)
  local subnet_mask=$(echo "$network_address" | cut -d'/' -f2)
  
  # Check if the IP address is valid
  if [[ $octet1 -ge 0 && $octet1 -le 255 &&
        $octet2 -ge 0 && $octet2 -le 255 &&
        $octet3 -ge 0 && $octet3 -le 255 &&
        $octet4 -ge 0 && $octet4 -le 255 ]]; then
    # Check if the subnet mask is valid
    if ! [[ $subnet_mask -ge 0 && $subnet_mask -le 32 ]]; then
      echo "The subnet mask $subnet_mask is invalid."
      return 0
    fi
  else
    echo "The IP address $octet1.$octet2.$octet3.$octet4 is invalid."
    return 1
  fi
}

LAB_DIR=$(dirname $(realpath $BASH_SOURCE))/docker-lab
export LAB_DIR

ENV_FILE="$LAB_DIR/lab/.env"

if [ -f "$ENV_FILE" ]; then
    echo "Found config file!"
else
    echo "Config file not found."

    # Request host IP
    while true; do
    echo "Enter host IP address:"
    read ip_address

        if validate_ip $ip_address; then
            break
        else
            echo "Wrong IP address."
        fi
    done

    # Request network address
    echo "Enter network adress for vulnerable containers: (default: 10.0.1.0/24)"
    read network_address

    if ! validate_network_address $network_address; then
        echo "Using default network address: 10.0.1.0/24"
        network_address="10.0.1.0/24"
    fi

IFS=/ read -r ip bits <<< "$network_address"
IFS=. read -r i1 i2 i3 i4 <<< "$ip"

int_mask=$((2 ** $bits - 1 << (32 - $bits)))
mask=$(($int_mask>>24)).$((($int_mask>>16)&255)).$((($int_mask>>8)&255)).$(($int_mask&255))
IFS=. read -r m1 m2 m3 m4 <<< "$mask"

# Generate .env for docker-compose
cat << EOF > ${LAB_DIR}/lab/.env
HOST_IP=$ip_address
VULNERABLE_NETWORK=$network_address
GW_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+1))
ATTACKER1_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+2))
ATTACKER2_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+3))
VULNERABLE1_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+4))
VULNERABLE2_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+5))
VULNERABLE3_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+6))
VULNERABLE4_IP=$((i1 & m1)).$((i2 & m2)).$((i3 & m3)).$(((i4 & m4)+7))
DOCKER_LAB_DIR=$LAB_DIR/../
REPO_DIR=$(dirname $(realpath $BASH_SOURCE))
EOF

fi

${LAB_DIR}/lab-deploy.sh
